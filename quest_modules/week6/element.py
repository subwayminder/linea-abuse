from config import ZACE_CONTRACT, ZACE_METHOD
from ..account import Account
from typing import Union
from hashlib import sha256
from typing import Union
from loguru import logger
from utils.gas_checker import check_gas
from utils.helpers import retry

class ElementNft(Account):
    def __init__(self, account_id: int, private_key: str, proxy: Union[None, str]) -> None:
        super().__init__(account_id=account_id, private_key=private_key, proxy=proxy)

    @check_gas
    @retry
    async def mint(self):
        logger.info(f"[{self.account_id}][{self.address}] Element Mint")
        value = self.w3.to_wei(0.00001, 'ether')
        txData = await self.getTxData(value)
        txData['data'] = '0xa4d73041000000000024fd1c660910a6ca23fb8ac42d54f65d0bccde1d7976c4e21ed1f1d3b7bf6305ae522866309de2eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90ba52c3a1eadf6a3fbb4b287538262ae993ca117a0e481f908209137a46268ea7d49c7efb9dd0ba2765cd555d0aa8baaa3d4bd702501e37ba06ac7eed854e1c67730ff0481b53d433f0312d8cb48be6e87b3e525e4043a603e545714dd5c75f00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000680010000000000000000000000578705c60609c9f02d8b7c1d83825e2f031e35aa003201000000000000c801f4a85cc24d370e79a5b7ed2dbc209a49355d6d1df200000000000009184e72a00000000000000000000000000000000000000f72ea00000000000009184e72a00000000000000000000000000000000000000f721d00000000000009184e72a00000000000000000000000000000000000000f726700000000000009184e72a00000000000000000000000000000000000000f71ef00000000000009184e72a00000000000000000000000000000000000000f721c00000000000009184e72a00000000000000000000000000000000000000f725f00000000000009184e72a00000000000000000000000000000000000000f726f00000000000009184e72a00000000000000000000000000000000000000f725c00000000000009184e72a00000000000000000000000000000000000000f71f100000000000009184e72a00000000000000000000000000000000000000f71f500000000000009184e72a00000000000000000000000000000000000000f726c00000000000009184e72a00000000000000000000000000000000000000f725100000000000009184e72a00000000000000000000000000000000000000f71f000000000000009184e72a00000000000000000000000000000000000000f725500000000000009184e72a00000000000000000000000000000000000000f71ea00000000000009184e72a00000000000000000000000000000000000000f724f00000000000009184e72a00000000000000000000000000000000000000f71f200000000000009184e72a00000000000000000000000000000000000000f727300000000000009184e72a00000000000000000000000000000000000000f725400000000000009184e72a00000000000000000000000000000000000000f725600000000000009184e72a00000000000000000000000000000000000000f726900000000000009184e72a00000000000000000000000000000000000000f726800000000000009184e72a00000000000000000000000000000000000000f71ee00000000000009184e72a00000000000000000000000000000000000000f71ed00000000000009184e72a00000000000000000000000000000000000000f71f300000000000009184e72a00000000000000000000000000000000000000f71f600000000000009184e72a00000000000000000000000000000000000000f71f400000000000009184e72a00000000000000000000000000000000000000f726d00000000000009184e72a00000000000000000000000000000000000000f71fb00000000000009184e72a00000000000000000000000000000000000000f727000000000000009184e72a00000000000000000000000000000000000000f6f4e00000000000009184e72a00000000000000000000000000000000000000f6fc700000000000009184e72a00000000000000000000000000000000000000f6f5100000000000009184e72a00000000000000000000000000000000000000f6f5200000000000009184e72a00000000000000000000000000000000000000f6f4a00000000000009184e72a00000000000000000000000000000000000000f6f4b00000000000009184e72a00000000000000000000000000000000000000f6fc400000000000009184e72a00000000000000000000000000000000000000f6fc500000000000009184e72a00000000000000000000000000000000000000f6fd200000000000009184e72a00000000000000000000000000000000000000f6fd400000000000009184e72a00000000000000000000000000000000000000f6fcc00000000000009184e72a00000000000000000000000000000000000000f6f5800000000000009184e72a00000000000000000000000000000000000000f6f5b00000000000009184e72a00000000000000000000000000000000000000f6fcd00000000000009184e72a00000000000000000000000000000000000000f6fcf00000000000009184e72a00000000000000000000000000000000000000f6fce00000000000009184e72a00000000000000000000000000000000000000f6f5600000000000009184e72a00000000000000000000000000000000000000f6f6500000000000009184e72a00000000000000000000000000000000000000f6fde00000000000009184e72a00000000000000000000000000000000000000f6f5f'
        txData['to'] = '0x0caB6977a9c70E04458b740476B498B214019641'
        signedTx = await self.sign(txData)
        txHash = await self.send_raw_transaction(signedTx)
        await self.wait_until_tx_finished(txHash.hex())